508. Wiggle Sort
中文English
Given an unsorted array nums, reorder it in-place such that

nums[0] <= nums[1] >= nums[2] <= nums[3]....
Example
Example 1:

Input: [3, 5, 2, 1, 6, 4]
Output: [1, 6, 2, 5, 3, 4]
Explanation: This question may have multiple answers, and [2, 6, 1, 5, 3, 4] is also ok.
Example 2:

Input: [1, 2, 3, 4]
Output: [2, 1, 4, 3]
Notice
Please complete the problem in-place.

//Daniel
public class Solution {
    /*
     * @param nums: A list of integers
     * @return: nothing
     */
    public void wiggleSort(int[] nums) {
        // write your code here
        Arrays.sort(nums);
        for(int i = 1; i < nums.length-1; i+=2){
            swap(nums, i, i+1);
        }
    }
    public void swap(int[] nums, int left, int right){
    	int temp = nums[left];
    	nums[left] = nums[right];
    	nums[right] = temp;
    }
}

//Joel
public class Solution {
    /*
     * @param nums: A list of integers
     * @return: nothing
     */
    public void wiggleSort(int[] nums) {
        if (nums == null || nums.length == 0) {
		   return;
		}
		
		Arrays.sort(nums);
		
		for (int i = 1; i + 1 < nums.length; i++) {
		    int temp = nums[i];
			nums[i] = nums[i + 1];
			nums[i + 1] = temp;
			i++;
		}
    }
}
